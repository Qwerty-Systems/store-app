/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { ArticleWhereUniqueInput } from "../../article/base/ArticleWhereUniqueInput";

import {
  ValidateNested,
  IsOptional,
  IsDate,
  IsString,
  MaxLength,
  IsNumber,
  Min,
  Max,
  IsInt,
} from "class-validator";

import { Type } from "class-transformer";
import { LocationUpdateManyWithoutOrdersInput } from "./LocationUpdateManyWithoutOrdersInput";
import { StockWhereUniqueInput } from "../../stock/base/StockWhereUniqueInput";
import { StockUpdateManyWithoutOrdersInput } from "./StockUpdateManyWithoutOrdersInput";

@InputType()
class OrderUpdateInput {
  @ApiProperty({
    required: false,
    type: () => ArticleWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ArticleWhereUniqueInput)
  @IsOptional()
  @Field(() => ArticleWhereUniqueInput, {
    nullable: true,
  })
  article?: ArticleWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => LocationUpdateManyWithoutOrdersInput,
  })
  @ValidateNested()
  @Type(() => LocationUpdateManyWithoutOrdersInput)
  @IsOptional()
  @Field(() => LocationUpdateManyWithoutOrdersInput, {
    nullable: true,
  })
  locations?: LocationUpdateManyWithoutOrdersInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  orderDate?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  orderLocation?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  orderPrice?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  orderQuantity?: number | null;

  @ApiProperty({
    required: false,
    type: () => StockWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => StockWhereUniqueInput)
  @IsOptional()
  @Field(() => StockWhereUniqueInput, {
    nullable: true,
  })
  stock?: StockWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => StockUpdateManyWithoutOrdersInput,
  })
  @ValidateNested()
  @Type(() => StockUpdateManyWithoutOrdersInput)
  @IsOptional()
  @Field(() => StockUpdateManyWithoutOrdersInput, {
    nullable: true,
  })
  stocks?: StockUpdateManyWithoutOrdersInput;
}

export { OrderUpdateInput as OrderUpdateInput };
