/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { ProductWhereUniqueInput } from "../../product/base/ProductWhereUniqueInput";

import {
  ValidateNested,
  IsOptional,
  IsDate,
  IsString,
  MaxLength,
  IsNumber,
  Min,
  Max,
  IsInt,
} from "class-validator";

import { Type } from "class-transformer";
import { LocationCreateNestedManyWithoutOrdersInput } from "./LocationCreateNestedManyWithoutOrdersInput";
import { StockWhereUniqueInput } from "../../stock/base/StockWhereUniqueInput";
import { StockCreateNestedManyWithoutOrdersInput } from "./StockCreateNestedManyWithoutOrdersInput";

@InputType()
class OrderCreateInput {
  @ApiProperty({
    required: false,
    type: () => ProductWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ProductWhereUniqueInput)
  @IsOptional()
  @Field(() => ProductWhereUniqueInput, {
    nullable: true,
  })
  article?: ProductWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => LocationCreateNestedManyWithoutOrdersInput,
  })
  @ValidateNested()
  @Type(() => LocationCreateNestedManyWithoutOrdersInput)
  @IsOptional()
  @Field(() => LocationCreateNestedManyWithoutOrdersInput, {
    nullable: true,
  })
  locations?: LocationCreateNestedManyWithoutOrdersInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  orderDate?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  orderLocation?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  orderPrice?: number | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  orderQuantity?: number | null;

  @ApiProperty({
    required: false,
    type: () => StockWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => StockWhereUniqueInput)
  @IsOptional()
  @Field(() => StockWhereUniqueInput, {
    nullable: true,
  })
  stock?: StockWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => StockCreateNestedManyWithoutOrdersInput,
  })
  @ValidateNested()
  @Type(() => StockCreateNestedManyWithoutOrdersInput)
  @IsOptional()
  @Field(() => StockCreateNestedManyWithoutOrdersInput, {
    nullable: true,
  })
  stocks?: StockCreateNestedManyWithoutOrdersInput;
}

export { OrderCreateInput as OrderCreateInput };
